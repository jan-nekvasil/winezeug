This is a minimal example of using cmake with eclipse on Linux, or Visual Studio on Windows.

Steps to get Subclipse working in Eclipse under Ubuntu:
1) Don't do "apt-get install eclipse", that version doesn't seem to have a working subclipse.
2) Instead, download the latest eclipse from 
http://www.eclipse.org/downloads/packages/eclipse-ide-cc-developers-includes-incubating-components/indigosr1
and untar the file in your home directory, creating a directory named
'eclipse' with executable 'eclipse' inside it.
3) Install Subclipse... easier said than done!  Go to Help / Marketplace,
search for Subclipse, and install.  This takes about ten minutes,
even on a fast connection, because the Marketplace client is quite
inefficient.  All done?  Whew!
4) But wait!  Subclipse won't work yet, you need a native component,
see http://subclipse.tigris.org/wiki/JavaHL
To install *that*, do
  sudo apt-get install libsvn-java
5) Still not done!  You need to tell Eclipse where to find JavaHL.
Add the line
-Djava.library.path=/usr/lib/jni
to the end of ~/eclipse/eclipse.ini as described in the JavaHL web page.
6) Quit Eclipse
7) Start Eclipse again, and verify that SVN shows up in the Window / Prefereces / Team menu.

Once you've verified that SVN shows up in the Team preferences menu,
*now* import this example project!  i.e. do
  rm -rf build
  sh demo.sh
then do
  File / Import / Existing PROJECTS from filesystem
and select
  ~/winezeug/cmake_examples/ex6
This will import both the Source and the Build projects generated by the
cdt generator when build.sh was run... and since SVN was active at the
time of import, the source project should be all hooked up to the svn
repository you got winezeug/cmake_examples from.  You can verify this
by right-clicking the Source project; it should show lots of options,
not just 'share' or 'patch'.

Whew!
